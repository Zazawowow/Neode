version: '3.8'

services:
  neode-web:
    image: node:18-alpine
    working_dir: /app
    expose:
      - "80"
    ports:
      - "8100:80"
    command: >
      sh -c "
        apk add --no-cache git nginx &&
        git clone https://github.com/Zazawowow/Neode.git . &&
        cd web &&
        npm ci &&
        npm run build:deps &&
        npm run build:ui &&
        mkdir -p /usr/share/nginx/html &&
        cp -r dist/raw/ui/* /usr/share/nginx/html/ &&
        cp -r projects/shared/assets /usr/share/nginx/html/ &&
        cat > /etc/nginx/nginx.conf << 'EOF'
events { worker_connections 1024; }
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    location / {
      try_files \$uri \$uri/ /index.html;
    }
    location /assets {
      alias /usr/share/nginx/html/assets;
      expires 1y;
    }
    location /health {
      access_log off;
      return 200 'healthy';
      add_header Content-Type text/plain;
    }
  }
}
EOF
        nginx -t &&
        nginx -g 'daemon off;'
      "
    container_name: neode-web
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.neode.rule=Host(`neode.local`)"
      - "traefik.http.routers.neode.entrypoints=web"
      - "traefik.http.services.neode.loadbalancer.server.port=80"
    networks:
      - neode-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  neode-network:
    driver: bridge